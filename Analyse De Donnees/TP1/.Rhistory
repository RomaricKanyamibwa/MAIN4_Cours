source('/nfs/home/sasl/eleves/main/3600594/Bureau/Analyse De Donnees/TP0/ex2.R')
ll
ls
data=read.table("notes_ACP.txt")
data
head(data)#on verifie que la table est bien une table bien structuré
summary(data)
head(data)#on verifie que la table est bien une table bien structuré
summary(data)
boxplot(data)
pairs(data)
cov(data)
summary(data)
length(data)
covariance=(length(data)-1)/length(data)*cov(data)
View(covariance)
View(covariance)
cor(data)
apply(data,2,mean)
apply(data,2,var)
?apply
covariance=(length(data)-1)/length(data)*cov(data)
apply(data,2,mean)
covariance
var(data)
X=scale(data,scale = FALSE)
X
data
X
apply(data,2,var)
eigen(X)
X=scale(data,center = TRUE,scale = FALSE)
X
eigen(covariance)
Valuer_propre=eigen((length(data)-1)/length(data)*cov(X)
Valuer_propre=eigen((length(data)-1)/length(data)*cov(X))
X=scale(data,center = TRUE,scale = FALSE)
Valuer_propre=eigen((length(data)-1)/length(data)*cov(X))
Valuer_propre
It=sum(diag(Valuer_propre))
diag(Valuer_propre)
Eigen=eigen((length(data)-1)/length(data)*cov(X))
Valuer_propre=Eigen$values#Matrice S de covariance
diag(Valuer_propre)
It=sum(diag(Valuer_propre))
IT
It
n=9
Eigen=eigen((n-1)/n*cov(X))
Valuer_propre=Eigen$values#Matrice S de covariance
Vecteur_propre=Eigen$vectors
It=sum(diag(Valuer_propre))
It
Valuer_propre
It_mat_cov=sum(diag((n-1)/n*cov(X)))
It_mat_cov
Part_It=Valuer_propre/It
Part_It
plot(Valuer_propre/It)
plot(Valuer_propre/It,type = "b")
plot(Valuer_propre/It,type = "b")
princomp(data)
pca.notes=princomp(data)
pca.notes
?princomp
pca.notes$sdev
pca.notes$n.obs
Val_p=(pca.notes$sdev)^2
Vect_p=(pca.notes$loadings)
Val_p
Valuer_propre
Vecteur_propre
Vect_p
summary(pca.notes)
plot(pca.notes)
Valuer_propre=Eigen$values#Matrice S de covariance
plot(pca.notes,type='l')
plot(pca.notes,type='l')
plot(pca.notes)
C=pca.notes$scores
C
C(1)
C[1]
C[1,]
C[,1]
C[,2]
C[,1:2]
plot(C[,1:2],type = "n",xlab = "PC1",ylab = "PC2")
text(C[,1:2],labels = row.names(data),cex = 1.5)
norm=function(X){return(X^2)}
norm
?apply
cos2=cbind(C[,1]^2/apply(X,1,norm),C[,2]^2/apply(X,1,norm))
cos2
norm=function(x){return(x^2)}
cos2=cbind(C[,1]^2/apply(X,1,norm),C[,2]^2/apply(X,1,norm))
cos2
X=scale(data,center = TRUE,scale = FALSE)
norm=function(x){return(x^2)}
cos2=cbind(C[,1]^2/apply(X,1,norm),C[,2]^2/apply(X,1,norm))
cos2
rowsum(cos2)
C[,1]
C[,1]^2/apply(X,1,norm)
C[,1]^2
X
cos2=cbind(C[,1]^2/apply(X,1,norm),C[,2]^2/apply(X,1,norm))
cos2
X=scale(data,center = TRUE,scale = FALSE)
X
C
C[,1]
norm=function(x){return(sum(x^2))}
cos2=cbind(C[,1]^2/apply(X,1,norm),C[,2]^2/apply(X,1,norm))
cos2
rowsum(cos2)
rowSums(cos2)
install.packages("FactoMineR")
install.packages("FactoMineR")
library(FactoMinrR)
library(FactoMineR)
library(FactoMineR)
library(FactoMineR)
source('/nfs/home/sasl/eleves/main/3600594/Bureau/Analyse De Donnees/TP1/ex1.R')
data=read.table("notes_ACP.txt")
head(data)#on verifie que la table est bien une table bien structuré
summary(data)
boxplot(data)
pairs(data)#Math pysique sont correlés et anglais français aussi.
apply(data,2,mean)
apply(data,2,var)
X=scale(data,center = TRUE,scale = FALSE)
