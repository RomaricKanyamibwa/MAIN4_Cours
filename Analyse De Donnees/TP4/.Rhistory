load("DataLubischew.Rdata")
DataLubischew()
data=DataLubischew()
data
head(data)
X=data[,1:6]
X=data[,1:6]
X
y=data[,6]
Y=data[,6]
Y
Y=data[,7]
Y
library(FactoMineR)
pca<-PCA(X)
plot(pca,col.ind=Y)
pca<-PCA(X)
library(MASS)
afd=lda(X,grouping=Y)
afd=lda(X,grouping=Y)
afd$scaling
is.factor(Y)
Y=as.factor(Y)
afd=lda(X,grouping=Y)
afd$scaling
K=nlevels(Y)
K
pred=predict(afd,prior=rep(1,K)/K)
pred
plot(afd)
plot(afd,col.ind=Y)
plot(afd,col)
plot(afd)
C.afd=pred$x
C.afd
pred$class
summary(afd)
afd
plot(afd)
plot(pca,col.ind=Y)
par(mfrow=c(1,2))
plot(pca,col.ind=Y)
plot(afd)
newdata=data.frame(M1=175,M2=125,M3=51,M4=140,M5=14,M6=104)
pred.new=predict(afd,newdata,prior=rep(1,K)/K)
pred.new
install.packages("mvtnorm")
y
quit()
data=read.table("SAheart.data")
data
data=read.table("SAheart.data")
data=read.table("SAheart.data",,header = T,row.names = 1)
data=read.table("SAheart.data",sep=",",header = T,row.names = 1)
data
head(data)
summary(data)
head(data)
is.factor(data[,4])
data[,4]
data[,5]
is.factor(data[,5])
data=read.table("SAheart.data",sep=",",header = T,row.names = 1)
head(data)
summary(data)
plot(data)
is.factor(data[,10])
str(data)#type des variables
data$chd
data$chd=as.factor(data$chd)
data$chd
str(data)#type des variables
attach(data)
res<-glm(chd~.,family = binomial,data=donnees)
res<-glm(chd~.,family = binomial,data=data)
res
summary(res)
attach(data)
OR_AntFam=exp(famhist)
res$coefficients
res$coefficients$
*
res$coefficients$famhistPresent
res$coefficients["famhistPresent"]
res$coefficients["famhistPresent",1]
res$coefficients["famhistPresent",]
res$coefficients["famhistPresent"]
res$coefficients["famhistPresent"][1]
res$coefficients["famhistPresent"][2]
OR_AntFam=exp(res$coefficients["famhistPresent"])
OR_AntFam
OR=exp(summary(res)$coefficients[,1])
OR
res0=glm(chd~1,family = "binomial",data=data)
anova(res0,res,test="chisq")
anova(res0,res,test="Chisq")
summary(res)
library("MASS")
res_AIC<-step(res)
anova(res0,res,test="Chisq")#comparaison de res et res0
anova(res_AIC,res,test="Chisq")#comparaison de res et res0
pred=predict(res_AIC, data.frame(sbp=150, tobacco=10, ldl=5, adiposity=23,
famhist="Present", typea=70, obesity=25, alcohol=100, age=50) , type="response")
class=1*(pred>0.5)
pred
class=1*(pred>0.5)
library(car)
crPlots(res_AIC)
class
vif(res_AIC)
par(mfrow=c(2,2))
plot(res_AIC)
abs(residuals(res_AIC,type="pearson"))[abs(residuals(res_AIC,type="pearson"))>2]
abs(residuals(res_AIC,type="deviance"))[abs(residuals(res_AIC,type="deviance"))>2]
infl = influence.measures(res_AIC)
leviers = infl$infmat[,"hat"]
p<-length(res_AIC$coefficients)
n<-nrow(donnees)
leviers[leviers > 3* p/n]
n<-nrow(data)
leviers[leviers > 3* p/n]
leviers
leviers[leviers > 3* p/n]
abs(residuals(res_AIC,type="pearson"))[abs(residuals(res_AIC,type="pearson"))>2]
abs(residuals(res_AIC,type="deviance"))[abs(residuals(res_AIC,type="deviance"))>2]
abs(residuals(res_AIC,type="pearson"))[abs(residuals(res_AIC,type="pearson"))>2]
n
sample(data,10)
data.test=data[sample(data),n.test]
n=nrow(data)
test.ratio=0.2
n.test=ceiling(n*test.ratio)
data.test=data[sample(data),n.test]
data.test
data.test=data[sample(data,n.test)]
n.test
data=read.table("SAheart.data",sep=",",header = T,row.names = 1)
head(data)
str(data)#type des variables
summary(data)
is.factor(data[,5])#variable qualitative
is.factor(data[,10])
data$chd=as.factor(data$chd)
tr=sample(1:n,n.test)
data.test=data[-tr,]
data.train=data[-tr,]
data.test=data[tr,]
attach(data)
test.train<-glm(chd~ tobacco+ldl+famhist+types=age,family = binomial,data=data.train)
test.train<-glm(chd~ tobacco+ldl+famhist+types+age,family = binomial,data=data.train)
data.train=data[-tr,]
data.test=data[tr,]
test.train<-glm(chd~ tobacco+ldl+famhist+types+age,family = binomial,data=data.train)
test.train<-glm(chd~tobacco+ldl+famhist+types+age,family = binomial,data=data.train)
test.train<-glm(chd~tobacco+ldl+famhist+typea+age,family = binomial,data=data.train)
res.train<-glm(chd~tobacco+ldl+famhist+typea+age,family = binomial,data=data.train)
res.train<-glm(chd~tobacco+ldl+famhist+typea+age,family = binomial,data=data.train)
pred_logit<-predict(res.train,data.test,type="response")
class_logit<-1*(pred_logit>1/2)
class_logit
table(class_logit,data.test$chd)
table(class_logit,data.testglm(chd~.,family = binomial,data=data.test$chd)
table(class_logit,data.testglm(chd~.,family = binomial,data=data.test$chd))
table(class_logit,data.testglm(chd~.,family = binomial,data=data.test$chd))
table(class_logit,data.testt$chd)
table(class_logit,data.test$chd)
mean(class_logit==data.test$chd)
library(ROCR)
library(ROCR)
library(ROCR)
library(ROCR)
pred_logit <- predict(res_train, donnees.test, type="response")
data=read.table("SAheart.data",sep=",",header = T,row.names = 1)
head(data)
str(data)#type des variables
summary(data)
is.factor(data[,5])#variable qualitative
is.factor(data[,10])
data$chd=as.factor(data$chd)
n=nrow(data)
test.ratio=0.2
n.test=ceiling(n*test.ratio)
tr=sample(1:n,n.test)
data.train=data[-tr,]
data.test=data[tr,]
res.train<-glm(chd~tobacco+ldl+famhist+typea+age,family = binomial,data=data.train)
pred_logit<-predict(res.train,data.test,type="response")
class_logit<-1*(pred_logit>1/2)
table(class_logit,data.test$chd)
mean(class_logit==data.test$chd)
library(ROCR)
pred_logit <- predict(res_train, donnees.test, type="response")
pred_logit <- predict(res.train, data.test, type="response")
predictions_logit <- prediction( pred_logit,  donnees.test$chd)
predictions_logit <- prediction( pred_logit,  data.test$chd)
perf_logit <- performance(predictions_logit , "tpr", "fpr" )
plot(perf)
plot(perf_logit)
library(boot)
cout <- function(Y, class)   {return(mean(abs(Y-class)>0.5))}
cv.glm(donnees, res_AIC, cout)$delta[1]
library(boot)
cout <- function(Y, class)   {return(mean(abs(Y-class)>0.5))}
cv.glm(donnees, res_AIC, cout)$delta[1]
cv.glm(data, res_AIC, cout)$delta[1]
data=read.table("SAheart.data",sep=",",header = T,row.names = 1)
head(data)
str(data)#type des variables
summary(data)
is.factor(data[,5])#variable qualitative
is.factor(data[,10])
data$chd=as.factor(data$chd)
str(data)#type des variables
arbre=rpart(chd~.,data)
arbre=rpart(chd~.,data)
data=read.table("SAheart.data",sep=",",header = T,row.names = 1)
attach(data)
arbre=rpart(chd~.,data)
library(rpart)
arbre=rpart(chd~.,data)
print(arbre)
summary(arbre)
plot(arbre,uniform=TRUE)
text(arbre,all=TRUE,use.n = TRUE ,fancy = TRUE)
plotcp(arbre)
